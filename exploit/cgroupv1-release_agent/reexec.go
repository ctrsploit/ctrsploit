package cgroupv1_release_agent

import (
	"bytes"
	"github.com/ctrsploit/sploit-spec/pkg/log"
	"github.com/docker/docker/pkg/reexec"
	"github.com/pkg/errors"
	"github.com/ssst0n3/awesome_libs/awesome_error"
	"io"
	"os"
)

const ExpName = "cgroupv1-release_agent"

func init() {
	reexec.Register(ExpName, Exploit)
}

func InvokeExploit(cmdOnHost string, debug bool) (reader io.ReadCloser, err error) {
	_, w, _ := os.Pipe()
	debugArg := "--debug"
	if !debug {
		debugArg += "=false"
	}
	cmd := reexec.Command(ExpName, debugArg, "--cmd", cmdOnHost)
	log.Logger.Debug(cmd.Path)
	errBuff := bytes.NewBuffer(nil)
	//cmd.Stderr = errBuff
	cmd.Stderr = os.Stderr
	reader, writer := io.Pipe()
	//cmd.Stdout = writer
	cmd.Stdout = os.Stdout
	cmd.ExtraFiles = append(cmd.ExtraFiles, w)

	if err := cmd.Start(); err != nil {
		err = errors.Wrap(err, "cgroupv1_release_agent error on re-exec cmd")
		awesome_error.CheckErr(err)
		return reader, err
	}
	go func() {
		err := cmd.Wait()
		err = errors.Wrapf(err, "error on exploit cgroupv1_release_agent: %s", errBuff)
		writer.CloseWithError(err)
	}()
	return
}
